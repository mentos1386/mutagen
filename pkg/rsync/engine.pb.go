// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rsync/engine.proto

package rsync

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// BlockHash represents a pair of weak and strong hash for a base block.
type BlockHash struct {
	// Weak is the weak hash for the block.
	Weak uint32 `protobuf:"varint,1,opt,name=weak,proto3" json:"weak,omitempty"`
	// Strong is the strong hash for the block.
	Strong               []byte   `protobuf:"bytes,2,opt,name=strong,proto3" json:"strong,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockHash) Reset()         { *m = BlockHash{} }
func (m *BlockHash) String() string { return proto.CompactTextString(m) }
func (*BlockHash) ProtoMessage()    {}
func (*BlockHash) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a36df88a2ab8311, []int{0}
}

func (m *BlockHash) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockHash.Unmarshal(m, b)
}
func (m *BlockHash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockHash.Marshal(b, m, deterministic)
}
func (m *BlockHash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockHash.Merge(m, src)
}
func (m *BlockHash) XXX_Size() int {
	return xxx_messageInfo_BlockHash.Size(m)
}
func (m *BlockHash) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockHash.DiscardUnknown(m)
}

var xxx_messageInfo_BlockHash proto.InternalMessageInfo

func (m *BlockHash) GetWeak() uint32 {
	if m != nil {
		return m.Weak
	}
	return 0
}

func (m *BlockHash) GetStrong() []byte {
	if m != nil {
		return m.Strong
	}
	return nil
}

// Signature represents an rsync base signature. It encodes the block size used
// to generate the signature, the size of the last block in the signature (which
// may be smaller than a full block), and the hashes for the blocks of the file.
type Signature struct {
	// BlockSize is the block size used to compute the signature.
	BlockSize uint64 `protobuf:"varint,1,opt,name=blockSize,proto3" json:"blockSize,omitempty"`
	// LastBlockSize is the size of the last block in the signature.
	LastBlockSize uint64 `protobuf:"varint,2,opt,name=lastBlockSize,proto3" json:"lastBlockSize,omitempty"`
	// Hashes are the hashes of the blocks in the base.
	Hashes               []*BlockHash `protobuf:"bytes,3,rep,name=hashes,proto3" json:"hashes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Signature) Reset()         { *m = Signature{} }
func (m *Signature) String() string { return proto.CompactTextString(m) }
func (*Signature) ProtoMessage()    {}
func (*Signature) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a36df88a2ab8311, []int{1}
}

func (m *Signature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Signature.Unmarshal(m, b)
}
func (m *Signature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Signature.Marshal(b, m, deterministic)
}
func (m *Signature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Signature.Merge(m, src)
}
func (m *Signature) XXX_Size() int {
	return xxx_messageInfo_Signature.Size(m)
}
func (m *Signature) XXX_DiscardUnknown() {
	xxx_messageInfo_Signature.DiscardUnknown(m)
}

var xxx_messageInfo_Signature proto.InternalMessageInfo

func (m *Signature) GetBlockSize() uint64 {
	if m != nil {
		return m.BlockSize
	}
	return 0
}

func (m *Signature) GetLastBlockSize() uint64 {
	if m != nil {
		return m.LastBlockSize
	}
	return 0
}

func (m *Signature) GetHashes() []*BlockHash {
	if m != nil {
		return m.Hashes
	}
	return nil
}

// Operation represents an rsync operation, which can be either a data operation
// or a block operation.
type Operation struct {
	// Data contains data for data operations. If its length is 0, the operation
	// is assumed to be a non-data operation. Operation transmitters and
	// receivers may thus treat a length-0 buffer as semantically equivalent to
	// a nil buffer and utilize that fact to efficiently re-use buffer capacity,
	// e.g. by truncating the buffer and doing a gob receive into it.
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// Start is the 0-indexed starting block for block operations.
	Start uint64 `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	// Count is the number of blocks for block operations.
	Count                uint64   `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Operation) Reset()         { *m = Operation{} }
func (m *Operation) String() string { return proto.CompactTextString(m) }
func (*Operation) ProtoMessage()    {}
func (*Operation) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a36df88a2ab8311, []int{2}
}

func (m *Operation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Operation.Unmarshal(m, b)
}
func (m *Operation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Operation.Marshal(b, m, deterministic)
}
func (m *Operation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Operation.Merge(m, src)
}
func (m *Operation) XXX_Size() int {
	return xxx_messageInfo_Operation.Size(m)
}
func (m *Operation) XXX_DiscardUnknown() {
	xxx_messageInfo_Operation.DiscardUnknown(m)
}

var xxx_messageInfo_Operation proto.InternalMessageInfo

func (m *Operation) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Operation) GetStart() uint64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *Operation) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func init() {
	proto.RegisterType((*BlockHash)(nil), "rsync.BlockHash")
	proto.RegisterType((*Signature)(nil), "rsync.Signature")
	proto.RegisterType((*Operation)(nil), "rsync.Operation")
}

func init() { proto.RegisterFile("rsync/engine.proto", fileDescriptor_7a36df88a2ab8311) }

var fileDescriptor_7a36df88a2ab8311 = []byte{
	// 252 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0x41, 0x4b, 0xf4, 0x30,
	0x10, 0x86, 0xe9, 0x76, 0xb7, 0xd0, 0xf9, 0x76, 0xe1, 0x23, 0x88, 0xf4, 0xe0, 0xa1, 0x14, 0xc5,
	0x5e, 0x6c, 0x41, 0x0f, 0xde, 0x7b, 0x12, 0x3c, 0x08, 0xdd, 0x9b, 0xb7, 0x69, 0x0d, 0x49, 0xe8,
	0x6e, 0x52, 0x92, 0xa9, 0xb2, 0xfe, 0x7a, 0xe9, 0x6c, 0x59, 0xf1, 0x36, 0xef, 0x93, 0x49, 0xde,
	0x87, 0x80, 0xf0, 0xe1, 0x64, 0xfb, 0x5a, 0x5a, 0x65, 0xac, 0xac, 0x46, 0xef, 0xc8, 0x89, 0x0d,
	0xb3, 0xe2, 0x19, 0xd2, 0xe6, 0xe0, 0xfa, 0xe1, 0x05, 0x83, 0x16, 0x02, 0xd6, 0x5f, 0x12, 0x87,
	0x2c, 0xca, 0xa3, 0x72, 0xd7, 0xf2, 0x2c, 0xae, 0x21, 0x09, 0xe4, 0x9d, 0x55, 0xd9, 0x2a, 0x8f,
	0xca, 0x6d, 0xbb, 0xa4, 0xe2, 0x04, 0xe9, 0xde, 0x28, 0x8b, 0x34, 0x79, 0x29, 0x6e, 0x20, 0xed,
	0xe6, 0x57, 0xf6, 0xe6, 0x5b, 0xf2, 0xed, 0x75, 0xfb, 0x0b, 0xc4, 0x2d, 0xec, 0x0e, 0x18, 0xa8,
	0xb9, 0x6c, 0xac, 0x78, 0xe3, 0x2f, 0x14, 0x25, 0x24, 0x1a, 0x83, 0x96, 0x21, 0x8b, 0xf3, 0xb8,
	0xfc, 0xf7, 0xf8, 0xbf, 0x62, 0xc3, 0xea, 0xa2, 0xd7, 0x2e, 0xe7, 0xc5, 0x2b, 0xa4, 0x6f, 0xa3,
	0xf4, 0x48, 0xc6, 0xd9, 0xd9, 0xf9, 0x03, 0x09, 0xb9, 0x75, 0xdb, 0xf2, 0x2c, 0xae, 0x60, 0x13,
	0x08, 0x3d, 0x2d, 0x45, 0xe7, 0x30, 0xd3, 0xde, 0x4d, 0x96, 0xb2, 0xf8, 0x4c, 0x39, 0x34, 0xf7,
	0xef, 0x77, 0xca, 0x90, 0x9e, 0xba, 0xaa, 0x77, 0xc7, 0x5a, 0xe3, 0xa7, 0xeb, 0x1f, 0x8c, 0xab,
	0x8f, 0x13, 0xa1, 0x92, 0xb6, 0x1e, 0x07, 0x55, 0xb3, 0x47, 0x97, 0xf0, 0xbf, 0x3d, 0xfd, 0x04,
	0x00, 0x00, 0xff, 0xff, 0x54, 0xbc, 0x4e, 0x93, 0x4d, 0x01, 0x00, 0x00,
}
